!function(){"use strict";function n(){return{restrict:"E",scope:{basePath:"=",languages:"=",translations:"=",queries:"="},replace:!0,templateUrl:"translate-editor.tpl.html",controller:"TranslateEditorController",controllerAs:"locale",bindToController:!0}}function e(){function n(){_.each(c.languages,function(n){c.bindings[n]={forms:[]},c.xmlDefinitions[n]=JSON.toXML(c.translations[n])})}function e(){_.each(c.languages,function(n){c.xmlDefinitions[n]=JSON.toXML(c.translations[n])})}function t(){_.each(c.languages,function(n){c.bindings[n].forms=[]})}function a(n,e){var t=n;return _.each(e,function(n){t=t[n]}),t}function i(n,e){if(e=e||[],n.parentNode&&(e=i(n.parentNode,e)),n.previousSibling){var t=1,a=n.previousSibling;do 1==a.nodeType&&a.nodeName==n.nodeName&&t++,a=a.previousSibling;while(a);1==t&&(t=null)}else if(n.nextSibling){var l=n.nextSibling;do l=1==l.nodeType&&l.nodeName==n.nodeName?null:l.previousSibling;while(l)}return 1==n.nodeType&&e.push(n.nodeName),e}function l(n,e,t,i){var l=a(n,e.path);l[t]=i,e.value=l,l=null}function o(n,t){var i=a(n,t.path);i[c.newKey]=t.newValue,t.value=i,i=null,_.each(_.without(c.languages,t.lang),function(n){i=a(c.translations[n],t.path),_.has(i,c.newKey)||(i[c.newKey]=t.newValue,_.map(c.bindings[n].forms,function(n){n.value=i}))}),delete c.newKey,delete t.newValue,e()}function r(n,t){_.each(c.languages,function(e){var i=a(c.translations[e],n.path);delete i[t],_.map(c.bindings[e].forms,function(n){n.value=i})}),e()}function s(n){n.element.innerHTML=n.value;var e=Defiant.node.toJSON(c.xmlDefinitions[n.lang]);angular.copy(e,c.translations[n.lang])}function u(n){if(delete c.newKey,n)try{n=angular.uppercase(n),_.each(c.languages,function(e){c.bindings[e].forms=[];var t=Defiant.node.selectNodes(c.xmlDefinitions[e],n);_.each(t,function(n,t){var a=Defiant.node.toJSON(n),l=i(n).slice(1),o={lang:e,label:l.join("."),path:l,hasInput:"object"!=typeof n,isFlat:_.all(a,function(n,e){return _.isString(n)}),value:a,element:n};o.hasInput="object"!=typeof a,c.bindings[e].forms.push(o)}),c.hasError=!1})}catch(e){c.hasError=!0,t()}else c.hasError=!1,t()}var c=this;c.languages=c.languages||[],c.translations=c.translations||{},c.queries=c.queries||[],c.bindings={},c.xmlDefinitions={},c.hasError=!1,c.updateObject=l,c.writeObjectByKey=o,c.deleteObjectByKey=r,c.updateTranslations=s,c.findByKey=u,n()}angular.module("angular-translate-editor",["angular-translate-templates"]).directive("translateEditor",n).controller("TranslateEditorController",e),n.$inject=[],e.$inject=[]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuZ3VsYXItdHJhbnNsYXRlLWVkaXRvci5qcyJdLCJuYW1lcyI6WyJ0cmFuc2xhdGVFZGl0b3IiLCJyZXN0cmljdCIsInNjb3BlIiwiYmFzZVBhdGgiLCJsYW5ndWFnZXMiLCJ0cmFuc2xhdGlvbnMiLCJxdWVyaWVzIiwicmVwbGFjZSIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsImNvbnRyb2xsZXJBcyIsImJpbmRUb0NvbnRyb2xsZXIiLCJUcmFuc2xhdGVFZGl0b3JDb250cm9sbGVyIiwiaW5pdCIsIl8iLCJlYWNoIiwidm0iLCJsYW5nIiwiYmluZGluZ3MiLCJmb3JtcyIsInhtbERlZmluaXRpb25zIiwiSlNPTiIsInRvWE1MIiwic3luY0pzb25Ub1hNTCIsImNsZWFyQmluZGluZ3MiLCJ0cmF2ZXJzZU9iamVjdCIsIm9iamVjdCIsInBhdGgiLCJjdXJyIiwia2V5IiwiZ2V0UGF0aFRvTm9kZSIsIm5vZGUiLCJwYXJlbnROb2RlIiwicHJldmlvdXNTaWJsaW5nIiwiY291bnQiLCJzaWJsaW5nIiwibm9kZVR5cGUiLCJub2RlTmFtZSIsIm5leHRTaWJsaW5nIiwicHVzaCIsInVwZGF0ZU9iamVjdCIsImZvcm0iLCJ2YWx1ZSIsIndyaXRlT2JqZWN0QnlLZXkiLCJuZXdLZXkiLCJuZXdWYWx1ZSIsIndpdGhvdXQiLCJsYW5ndWFnZSIsImhhcyIsIm1hcCIsImRlbGV0ZU9iamVjdEJ5S2V5IiwidXBkYXRlVHJhbnNsYXRpb25zIiwiZWxlbWVudCIsImlubmVySFRNTCIsInVwZGF0ZWRKU09OIiwiRGVmaWFudCIsInRvSlNPTiIsImFuZ3VsYXIiLCJjb3B5IiwiZmluZEJ5S2V5IiwicXVlcnkiLCJ1cHBlcmNhc2UiLCJub2RlcyIsInNlbGVjdE5vZGVzIiwiaWR4Iiwibm9kZVZhbCIsInNsaWNlIiwibGFiZWwiLCJqb2luIiwiaGFzSW5wdXQiLCJpc0ZsYXQiLCJhbGwiLCJpc1N0cmluZyIsImhhc0Vycm9yIiwiZXJyIiwidGhpcyIsIm1vZHVsZSIs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QkFBbUJBLEVBQ3RCM0IsRUFBR2tDLGtCQUFvQkEsRUFDdkJsQyxFQUFHbUMsbUJBQXFCQSxFQUN4Qm5DLEVBQUcyQyxVQUFZQSxFQUVmOUMsSUE3Q0Y0QyxRQUNHbUIsT0FBTyw0QkFBNkIsZ0NBQ3BDQyxVQUFVLGtCQUFtQjdFLEdBQzdCUyxXQUFXLDRCQUE2QkcsR0FFM0NaLEVBQWdCOEUsV0FDaEJsRSxFQUEwQmtFIiwiZmlsZSI6ImFuZ3VsYXItdHJhbnNsYXRlLWVkaXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcblx0J3VzZSBzdHJpY3QnO1xuXHRhbmd1bGFyXG5cdCAgLm1vZHVsZSgnYW5ndWxhci10cmFuc2xhdGUtZWRpdG9yJywgWydhbmd1bGFyLXRyYW5zbGF0ZS10ZW1wbGF0ZXMnXSlcblx0ICAuZGlyZWN0aXZlKCd0cmFuc2xhdGVFZGl0b3InLCB0cmFuc2xhdGVFZGl0b3IpXG5cdCAgLmNvbnRyb2xsZXIoJ1RyYW5zbGF0ZUVkaXRvckNvbnRyb2xsZXInLCBUcmFuc2xhdGVFZGl0b3JDb250cm9sbGVyKTtcblxuXHR0cmFuc2xhdGVFZGl0b3IuJGluamVjdCA9IFtdO1xuXHRUcmFuc2xhdGVFZGl0b3JDb250cm9sbGVyLiRpbmplY3QgPSBbXTtcblxuXHRmdW5jdGlvbiB0cmFuc2xhdGVFZGl0b3IoKSB7XG5cdCAgcmV0dXJuIHtcblx0ICAgIHJlc3RyaWN0OiAnRScsXG5cdCAgICBzY29wZToge1xuXHQgICAgICBiYXNlUGF0aDogJz0nLCAgICAgICAvLyB4UGF0aCBxdWVyeSB0byBhdXRvbWF0aWNhbGx5IHByZXBlbmQgYXMgcm9vdFxuXHQgICAgICBsYW5ndWFnZXM6ICc9JywgICAgICAvLyBhcnJheSBvZiBhbGxvd2FibGUgbG9jYWxlc1xuXHQgICAgICB0cmFuc2xhdGlvbnM6ICc9JywgICAvLyBkaWN0aW9uYXJ5IG9mIGxhbmd1YWdlLXRyYW5zbGF0aW9uc1xuXHQgICAgICBxdWVyaWVzOiAnPScgICAgICAgICAvLyBwcmVkZWZpbmVkIHF1ZXJpZXMgdG8gYnVpbGQgYnV0dG9ucyBvblxuXHQgICAgfSxcblx0ICAgIHJlcGxhY2U6IHRydWUsXG5cdCAgICB0ZW1wbGF0ZVVybDogJ3RyYW5zbGF0ZS1lZGl0b3IudHBsLmh0bWwnLFxuXHQgICAgY29udHJvbGxlcjogJ1RyYW5zbGF0ZUVkaXRvckNvbnRyb2xsZXInLFxuXHQgICAgY29udHJvbGxlckFzOiAnbG9jYWxlJyxcblx0ICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcblx0ICB9O1xuXHR9XG5cblx0ZnVuY3Rpb24gVHJhbnNsYXRlRWRpdG9yQ29udHJvbGxlcigpIHtcblx0ICB2YXIgdm0gPSB0aGlzO1xuXG5cdCAgLy8gZnJvbSBkaXJlY3RpdmVcblx0ICB2bS5sYW5ndWFnZXMgPSB2bS5sYW5ndWFnZXMgfHwgW107XG5cdCAgdm0udHJhbnNsYXRpb25zID0gdm0udHJhbnNsYXRpb25zIHx8IHt9O1xuXHQgIHZtLnF1ZXJpZXMgPSB2bS5xdWVyaWVzIHx8IFtdO1xuXG5cdCAgLy8gYmluZGFibGUgdmFyaWFibGVzXG5cdCAgdm0uYmluZGluZ3MgPSB7fTsgICAgICAgIC8vIHN0b3JlcyByZXN1bHRzIG9mIHhQYXRoIHF1ZXJ5XG5cdCAgdm0ueG1sRGVmaW5pdGlvbnMgPSB7fTsgIC8vIHhtbCBlcXVpdmFsZW50cyBvZiB0cmFuc2xhdGlvbiBqc29uc1xuXHQgIHZtLmhhc0Vycm9yID0gZmFsc2U7ICAgICAvLyBib29sZWFuIGRldGVybWluaW5nIHdoZXRoZXIgdGhlcmUgd2FzIGEgcXVlcnkgZXJyb3JcblxuXHQgIC8vIGJpbmRhYmxlIG1ldGhvZHNcblx0ICB2bS51cGRhdGVPYmplY3QgPSB1cGRhdGVPYmplY3Q7XG5cdCAgdm0ud3JpdGVPYmplY3RCeUtleSA9IHdyaXRlT2JqZWN0QnlLZXk7XG5cdCAgdm0uZGVsZXRlT2JqZWN0QnlLZXkgPSBkZWxldGVPYmplY3RCeUtleTtcblx0ICB2bS51cGRhdGVUcmFuc2xhdGlvbnMgPSB1cGRhdGVUcmFuc2xhdGlvbnM7XG5cdCAgdm0uZmluZEJ5S2V5ID0gZmluZEJ5S2V5O1xuXG5cdCAgaW5pdCgpO1xuXG5cdCAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5cdCAgLyoqXG5cdCAgICogUHJpdmF0ZSBNZXRob2RzXG5cdCAgICovXG5cblx0ICBmdW5jdGlvbiBpbml0KCkge1xuXHQgICAgXy5lYWNoKHZtLmxhbmd1YWdlcywgZnVuY3Rpb24gKGxhbmcpIHtcblx0ICAgICAgdm0uYmluZGluZ3NbbGFuZ10gPSB7XG5cdCAgICAgICAgZm9ybXM6IFtdXG5cdCAgICAgIH07XG5cdCAgICAgIHZtLnhtbERlZmluaXRpb25zW2xhbmddID0gSlNPTi50b1hNTCh2bS50cmFuc2xhdGlvbnNbbGFuZ10pO1xuXHQgICAgfSk7XG5cdCAgfVxuXG5cdCAgZnVuY3Rpb24gc3luY0pzb25Ub1hNTCgpIHtcblx0ICAgIF8uZWFjaCh2bS5sYW5ndWFnZXMsIGZ1bmN0aW9uIChsYW5nKSB7XG5cdCAgICAgIHZtLnhtbERlZmluaXRpb25zW2xhbmddID0gSlNPTi50b1hNTCh2bS50cmFuc2xhdGlvbnNbbGFuZ10pO1xuXHQgICAgfSk7XG5cdCAgfVxuXG5cdCAgZnVuY3Rpb24gY2xlYXJCaW5kaW5ncygpIHtcblx0ICAgIF8uZWFjaCh2bS5sYW5ndWFnZXMsIGZ1bmN0aW9uIChsYW5nKSB7XG5cdCAgICAgIHZtLmJpbmRpbmdzW2xhbmddLmZvcm1zID0gW107XG5cdCAgICB9KTtcblx0ICB9XG5cblx0ICBmdW5jdGlvbiB0cmF2ZXJzZU9iamVjdChvYmplY3QsIHBhdGgpIHtcblx0ICAgIHZhciBjdXJyID0gb2JqZWN0O1xuXHQgICAgXy5lYWNoKHBhdGgsIGZ1bmN0aW9uIChrZXkpIHtcblx0ICAgICAgY3VyciA9IGN1cnJba2V5XTtcblx0ICAgIH0pO1xuXHQgICAgcmV0dXJuIGN1cnI7XG5cdCAgfVxuXG5cdCAgZnVuY3Rpb24gZ2V0UGF0aFRvTm9kZShub2RlLCBwYXRoKSB7XG5cdCAgICBwYXRoID0gcGF0aCB8fCBbXTtcblx0ICAgIGlmIChub2RlLnBhcmVudE5vZGUpIHtcblx0ICAgICAgcGF0aCA9IGdldFBhdGhUb05vZGUobm9kZS5wYXJlbnROb2RlLCBwYXRoKTtcblx0ICAgIH1cblxuXHQgICAgaWYgKG5vZGUucHJldmlvdXNTaWJsaW5nKSB7XG5cdCAgICAgIHZhciBjb3VudCA9IDE7XG5cdCAgICAgIHZhciBzaWJsaW5nID0gbm9kZS5wcmV2aW91c1NpYmxpbmc7XG5cdCAgICAgIGRvIHtcblx0ICAgICAgICBpZiAoc2libGluZy5ub2RlVHlwZSA9PSAxICYmIHNpYmxpbmcubm9kZU5hbWUgPT0gbm9kZS5ub2RlTmFtZSkgeyBjb3VudCsrOyB9XG5cdCAgICAgICAgc2libGluZyA9IHNpYmxpbmcucHJldmlvdXNTaWJsaW5nO1xuXHQgICAgICB9IHdoaWxlKHNpYmxpbmcpO1xuXHQgICAgICBpZiAoY291bnQgPT0gMSkgeyBjb3VudCA9IG51bGw7IH1cblx0ICAgIH0gZWxzZSBpZihub2RlLm5leHRTaWJsaW5nKSB7XG5cdCAgICAgIHZhciBuZXh0U2libGluZyA9IG5vZGUubmV4dFNpYmxpbmc7XG5cdCAgICAgIGRvIHtcblx0ICAgICAgICBpZiAobmV4dFNpYmxpbmcubm9kZVR5cGUgPT0gMSAmJiBuZXh0U2libGluZy5ub2RlTmFtZSA9PSBub2RlLm5vZGVOYW1lKSB7XG5cdCAgICAgICAgICBuZXh0U2libGluZyA9IG51bGw7XG5cdCAgICAgICAgfSBlbHNlIHtcblx0ICAgICAgICAgIG5leHRTaWJsaW5nID0gbmV4dFNpYmxpbmcucHJldmlvdXNTaWJsaW5nO1xuXHQgICAgICAgIH1cblx0ICAgICAgfSB3aGlsZShuZXh0U2libGluZyk7XG5cdCAgICB9XG5cblx0ICAgIGlmIChub2RlLm5vZGVUeXBlID09IDEpIHtcblx0ICAgICAgcGF0aC5wdXNoKG5vZGUubm9kZU5hbWUpO1xuXHQgICAgfVxuXHQgICAgcmV0dXJuIHBhdGg7XG5cdCAgfVxuXG5cdCAgLyoqXG5cdCAgICogUHVibGljIE1ldGhvZHNcblx0ICAgKi9cblxuXHQgIC8qKlxuXHQgICAqIHVwZGF0ZU9iamVjdFxuXHQgICAqIEBkZXNjcmlwdGlvbiBHaXZlbiBhIGZsYXQganNvbiBvYmplY3QsIHVwZGF0ZXMgYW5kIHN5bmNzIGEgcGFydGljdWxhciBrZXkvdmFsdWUgcGFpclxuXHQgICAqL1xuXHQgIGZ1bmN0aW9uIHVwZGF0ZU9iamVjdChvYmplY3QsIGZvcm0sIGtleSwgdmFsdWUpIHtcblx0ICAgIHZhciBjdXJyID0gdHJhdmVyc2VPYmplY3Qob2JqZWN0LCBmb3JtLnBhdGgpO1xuXHQgICAgY3VycltrZXldID0gdmFsdWU7XG5cdCAgICBmb3JtLnZhbHVlID0gY3Vycjtcblx0ICAgIGN1cnIgPSBudWxsO1xuXHQgIH1cblxuXHQgIC8qKlxuXHQgICAqIHdyaXRlT2JqZWN0QnlLZXlcblx0ICAgKiBAZGVzY3JpcHRpb24gV3JpdGVzIGEgbmV3IHZhbHVlIHRvIGFuIG9iamVjdCBieSB0cmF2ZXJzaW5nIGRvd24gdGhyb3VnaCBhIHBhdGhcblx0ICAgKiAgICAgICAgICAgICAgdGhlbiB3cml0ZXMgYSB2YWx1ZSBnaXZlbiBhIGtleVxuXHQgICAqL1xuXHQgIGZ1bmN0aW9uIHdyaXRlT2JqZWN0QnlLZXkob2JqZWN0LCBmb3JtKSB7XG5cdCAgICAvLyB1cGRhdGUgZm9yIGZvcm0gaW4gY3VycmVudCBsYW5ndWFnZVxuXHQgICAgdmFyIGN1cnIgPSB0cmF2ZXJzZU9iamVjdChvYmplY3QsIGZvcm0ucGF0aCk7XG5cdCAgICAvLyBzZXQgbmV3IGtleSB2YWx1ZVxuXHQgICAgY3Vyclt2bS5uZXdLZXldID0gZm9ybS5uZXdWYWx1ZTtcblx0ICAgIC8vIHVwZGF0ZSBqc29uIGluIHByZXZpZXdcblx0ICAgIGZvcm0udmFsdWUgPSBjdXJyO1xuXHQgICAgY3VyciA9IG51bGw7XG5cblx0ICAgIC8vIGNoZWNrIG90aGVyIGxhbmd1YWdlcyBmb3Iga2V5IGFuZCBmaWxsIHdpdGggdmFsdWUgaWYgbm90IGV4aXN0c1xuXHQgICAgXy5lYWNoKF8ud2l0aG91dCh2bS5sYW5ndWFnZXMsIGZvcm0ubGFuZyksIGZ1bmN0aW9uIChsYW5ndWFnZSkge1xuXHQgICAgICBjdXJyID0gdHJhdmVyc2VPYmplY3Qodm0udHJhbnNsYXRpb25zW2xhbmd1YWdlXSwgZm9ybS5wYXRoKTtcblx0ICAgICAgaWYgKCFfLmhhcyhjdXJyLCB2bS5uZXdLZXkpKSB7XG5cdCAgICAgICAgY3Vyclt2bS5uZXdLZXldID0gZm9ybS5uZXdWYWx1ZTtcblx0ICAgICAgICBfLm1hcCh2bS5iaW5kaW5nc1tsYW5ndWFnZV0uZm9ybXMsIGZ1bmN0aW9uIChmb3JtKSB7XG5cdCAgICAgICAgICAvLyB1cGRhdGUganNvbiBpbiBwcmV2aWV3XG5cdCAgICAgICAgICBmb3JtLnZhbHVlID0gY3Vycjtcblx0ICAgICAgICB9KTtcblx0ICAgICAgfVxuXHQgICAgfSk7XG5cblx0ICAgIC8vIGNsZWFyIGlucHV0c1xuXHQgICAgZGVsZXRlIHZtLm5ld0tleTtcblx0ICAgIGRlbGV0ZSBmb3JtLm5ld1ZhbHVlO1xuXG5cdCAgICAvLyBzeW5jIGNoYW5nZWQganNvbiBiYWNrIHRvIHhtbCBtb2RlbFxuXHQgICAgc3luY0pzb25Ub1hNTCgpO1xuXHQgIH1cblxuXHQgIC8qKlxuXHQgICAqIGRlbGV0ZU9iamVjdEJ5S2V5XG5cdCAgICogQGRlc2NyaXB0aW9uIERlbGV0ZXMgYSB2YWx1ZSBnaXZlbiBhIGtleSBpbiBhIGZsYXQganNvbiBvYmplY3Rcblx0ICAgKi9cblx0ICBmdW5jdGlvbiBkZWxldGVPYmplY3RCeUtleShmb3JtLCBrZXkpIHtcblx0ICAgIF8uZWFjaCh2bS5sYW5ndWFnZXMsIGZ1bmN0aW9uIChsYW5ndWFnZSkge1xuXHQgICAgICB2YXIgY3VyciA9IHRyYXZlcnNlT2JqZWN0KHZtLnRyYW5zbGF0aW9uc1tsYW5ndWFnZV0sIGZvcm0ucGF0aCk7XG5cdCAgICAgIC8vIHNldCBuZXcga2V5IHZhbHVlXG5cdCAgICAgIGRlbGV0ZSBjdXJyW2tleV07XG5cdCAgICAgIF8ubWFwKHZtLmJpbmRpbmdzW2xhbmd1YWdlXS5mb3JtcywgZnVuY3Rpb24gKGZvcm0pIHtcblx0ICAgICAgICAvLyB1cGRhdGUganNvbiBpbiBwcmV2aWV3XG5cdCAgICAgICAgZm9ybS52YWx1ZSA9IGN1cnI7XG5cdCAgICAgIH0pO1xuXHQgICAgfSk7XG5cdCAgICAvLyBzeW5jIGNoYW5nZWQganNvbiBiYWNrIHRvIHhtbCBtb2RlbFxuXHQgICAgc3luY0pzb25Ub1hNTCgpO1xuXHQgIH1cblxuXHQgIGZ1bmN0aW9uIHVwZGF0ZVRyYW5zbGF0aW9ucyhmb3JtKSB7XG5cdCAgICBmb3JtLmVsZW1lbnQuaW5uZXJIVE1MID0gZm9ybS52YWx1ZTtcblx0ICAgIHZhciB1cGRhdGVkSlNPTiA9IERlZmlhbnQubm9kZS50b0pTT04odm0ueG1sRGVmaW5pdGlvbnNbZm9ybS5sYW5nXSk7XG5cdCAgICBhbmd1bGFyLmNvcHkodXBkYXRlZEpTT04sIHZtLnRyYW5zbGF0aW9uc1tmb3JtLmxhbmddKTtcblx0ICB9XG5cblx0ICAvKipcblx0ICAgKiBmaW5kQnlLZXlcblx0ICAgKiBAZGVzY3JpcHRpb24gTWFpbiBxdWVyeSBmdW5jdGlvbiBmb3IgZXZhbHVhdGluZyB4UGF0aCBxdWVyaWVzIGFnYWluc3Rcblx0ICAgKiAgICAgICAgICAgICAgSlNPTiB0cmFuc2xhdGlvbiBvYmplY3RzLlxuXHQgICAqL1xuXHQgIGZ1bmN0aW9uIGZpbmRCeUtleShxdWVyeSkge1xuXHQgICAgZGVsZXRlIHZtLm5ld0tleTtcblx0ICAgIGlmICghcXVlcnkpIHtcblx0ICAgICAgdm0uaGFzRXJyb3IgPSBmYWxzZTtcblx0ICAgICAgY2xlYXJCaW5kaW5ncygpO1xuXHQgICAgfSBlbHNlIHtcblx0ICAgICAgdHJ5IHtcblx0ICAgICAgICBxdWVyeSA9IGFuZ3VsYXIudXBwZXJjYXNlKHF1ZXJ5KTtcblx0ICAgICAgICBfLmVhY2godm0ubGFuZ3VhZ2VzLCBmdW5jdGlvbiAobGFuZykge1xuXHQgICAgICAgICAgdm0uYmluZGluZ3NbbGFuZ10uZm9ybXMgPSBbXTtcblx0ICAgICAgICAgIHZhciBub2RlcyA9IERlZmlhbnQubm9kZS5zZWxlY3ROb2Rlcyh2bS54bWxEZWZpbml0aW9uc1tsYW5nXSwgcXVlcnkpO1xuXHQgICAgICAgICAgXy5lYWNoKG5vZGVzLCBmdW5jdGlvbiAobm9kZSwgaWR4KSB7XG5cdCAgICAgICAgICAgIHZhciBub2RlVmFsID0gRGVmaWFudC5ub2RlLnRvSlNPTihub2RlKTtcblx0ICAgICAgICAgICAgdmFyIHBhdGggPSBnZXRQYXRoVG9Ob2RlKG5vZGUpLnNsaWNlKDEpO1xuXHQgICAgICAgICAgICB2YXIgZm9ybSA9IHtcblx0ICAgICAgICAgICAgICBsYW5nOiBsYW5nLFxuXHQgICAgICAgICAgICAgIGxhYmVsOiBwYXRoLmpvaW4oXCIuXCIpLFxuXHQgICAgICAgICAgICAgIHBhdGg6IHBhdGgsXG5cdCAgICAgICAgICAgICAgaGFzSW5wdXQ6ICh0eXBlb2Ygbm9kZSAhPT0gJ29iamVjdCcpLFxuXHQgICAgICAgICAgICAgIGlzRmxhdDogXy5hbGwobm9kZVZhbCwgZnVuY3Rpb24gKHZhbHVlLCBrZXkpIHtcblx0ICAgICAgICAgICAgICAgIHJldHVybiBfLmlzU3RyaW5nKHZhbHVlKTtcblx0ICAgICAgICAgICAgICB9KSxcblx0ICAgICAgICAgICAgICB2YWx1ZTogbm9kZVZhbCxcblx0ICAgICAgICAgICAgICBlbGVtZW50OiBub2RlXG5cdCAgICAgICAgICAgIH07XG5cdCAgICAgICAgICAgIC8vIG9ubHkgYWxsb3cgbm9uIGFycmF5L29iamVjdHMgdG8gYmUgZWRpdGFibGVcblx0ICAgICAgICAgICAgZm9ybS5oYXNJbnB1dCA9ICh0eXBlb2Ygbm9kZVZhbCAhPSAnb2JqZWN0Jyk7XG5cdCAgICAgICAgICAgIHZtLmJpbmRpbmdzW2xhbmddLmZvcm1zLnB1c2goZm9ybSk7XG5cdCAgICAgICAgICB9KTtcblx0ICAgICAgICAgIHZtLmhhc0Vycm9yID0gZmFsc2U7XG5cdCAgICAgICAgfSk7XG5cdCAgICAgIH0gY2F0Y2goZXJyKSB7IC8vIHF1ZXJ5IGludmFsaWQsIHNvIGNsZWFyIGJpbmRpbmdzXG5cdCAgICAgICAgdm0uaGFzRXJyb3IgPSB0cnVlO1xuXHQgICAgICAgIGNsZWFyQmluZGluZ3MoKTtcblx0ICAgICAgfVxuXHQgICAgfVxuXHQgIH1cblx0fVxufSkoKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==

angular.module("angular-translate-templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("translate-editor.tpl.html","<div><div class=\"form-group\" ng-class=\"{ \'has-error\': locale.hasError }\"><input type=\"text\" class=\"form-control\" ng-model=\"locale.search\" ng-change=\"locale.findByKey(locale.search)\" ng-model-options=\"{ debounce: 500 }\" placeholder=\"Enter xPath Query Here\"> <small ng-if=\"locale.hasError\" class=\"pull-right text-danger\">Invalid Query!</small></div><button class=\"btn btn-default btn-sm\" ng-repeat=\"query in locale.queries track by $index\" ng-click=\"locale.findByKey(query.search); locale.search = query.search;\">{{query.label}}</button><div ng-if=\"!locale.hasError && locale.search\" ng-repeat=\"language in locale.languages track by $index\"><br><div class=\"panel panel-default\"><div class=\"panel-heading\"><h3 class=\"panel-title\"><strong>{{language | uppercase}}</strong></h3></div><div class=\"panel-body\"><div class=\"form-group\" ng-repeat=\"form in locale.bindings[language].forms track by $index\"><div ng-if=\"form.hasInput\"><label>{{form.label}}:</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"form.value\" ng-change=\"locale.updateTranslations(form)\" ng-model-options=\"{ debounce: 500 }\"></div><div ng-if=\"!form.hasInput\"><div class=\"panel panel-default\"><div class=\"panel-heading\"><ng-form class=\"form-inline\"><div class=\"form-group\"><label>{{form.label}}.</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"locale.newKey\" placeholder=\"TRANSLATION_KEY\"></div><div class=\"form-group\"><label>&nbsp; Value</label><div class=\"input-group\"><input type=\"text\" class=\"form-control input-sm\" ng-model=\"form.newValue\" placeholder=\"Translated Value\"> <span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-primary btn-sm\" ng-disabled=\"!form.newValue || !locale.newKey\" ng-click=\"locale.writeObjectByKey(locale.translations[language], form)\">Add</button></span></div></div></ng-form></div><div class=\"panel-body\"><div ng-if=\"form.isFlat\"><div class=\"form-group\" ng-repeat=\"(key, value) in form.value track by $index\"><label>{{form.label}}.{{key}}</label><div class=\"input-group\"><input type=\"text\" class=\"form-control input-sm\" ng-model=\"value\" ng-change=\"locale.updateObject(locale.translations[language], form, key, value)\" ng-model-options=\"{ debounce: 500 }\"> <span class=\"input-group-btn\"><button type=\"button\" tabindex=\"-1\" class=\"btn btn-warning btn-sm\" ng-click=\"locale.deleteObjectByKey(form, key)\">Remove</button></span></div></div></div><pre ng-if=\"!form.isFlat\">{{form.value | json}}</pre></div></div></div></div></div></div></div></div>");}]);