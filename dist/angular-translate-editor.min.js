!function(){"use strict";function n(){return{restrict:"E",scope:{basePath:"=",languages:"=",translations:"=",queries:"="},replace:!0,templateUrl:"translate-editor.tpl.html",controller:"TranslateEditorController",controllerAs:"locale",bindToController:!0}}function e(){function n(){_.each(c.languages,function(n){c.bindings[n]={forms:[]},c.xmlDefinitions[n]=JSON.toXML(c.translations[n])})}function e(){_.each(c.languages,function(n){c.xmlDefinitions[n]=JSON.toXML(c.translations[n])})}function t(){_.each(c.languages,function(n){c.bindings[n].forms=[]})}function a(n,e){var t=n;return _.each(e,function(n){t=t[n]}),t}function i(n,e){if(e=e||[],n.parentNode&&(e=i(n.parentNode,e)),n.previousSibling){var t=1,a=n.previousSibling;do 1==a.nodeType&&a.nodeName==n.nodeName&&t++,a=a.previousSibling;while(a);1==t&&(t=null)}else if(n.nextSibling){var o=n.nextSibling;do o=1==o.nodeType&&o.nodeName==n.nodeName?null:o.previousSibling;while(o)}return 1==n.nodeType&&e.push(n.nodeName),e}function o(n,e,t,i){var o=a(n,e.path);o[t]=i,e.value=o,o=null}function l(n,t){var i=a(n,t.path);i[c.newKey]=t.newValue,t.value=i,i=null,_.each(_.without(c.languages,t.lang),function(n){i=a(c.translations[n],t.path),_.has(i,c.newKey)||(i[c.newKey]=t.newValue,_.map(c.bindings[n].forms,function(n){n.value=i}))}),delete c.newKey,delete t.newValue,e()}function r(n,t){_.each(c.languages,function(e){var i=a(c.translations[e],n.path);delete i[t],_.map(c.bindings[e].forms,function(n){n.value=i})}),e()}function s(n){n.element.innerHTML=n.value;var e=Defiant.node.toJSON(c.xmlDefinitions[n.lang]);angular.copy(e,c.translations[n.lang])}function u(n){if(delete c.newKey,n)try{n=angular.uppercase(n),_.each(c.languages,function(e){c.bindings[e].forms=[];var t=Defiant.node.selectNodes(c.xmlDefinitions[e],n);_.each(t,function(n,t){var a=Defiant.node.toJSON(n),o=i(n).slice(1),l={lang:e,label:o.join("."),path:o,hasInput:"object"!=typeof n,isFlat:_.all(a,function(n,e){return _.isString(n)}),value:a,element:n};l.hasInput="object"!=typeof a,c.bindings[e].forms.push(l)}),c.hasError=!1})}catch(e){c.hasError=!0,t()}else c.hasError=!1,t()}var c=this;c.languages=c.languages||[],c.translations=c.translations||{},c.queries=c.queries||[],c.bindings={},c.xmlDefinitions={},c.hasError=!1,c.updateObject=o,c.writeObjectByKey=l,c.deleteObjectByKey=r,c.updateTranslations=s,c.findByKey=u,n()}angular.module("khchan.translate-editor",["angular-translate-templates"]).directive("translateEditor",n).controller("TranslateEditorController",e),n.$inject=[],e.$inject=[]}();
//# sourceMappingURL=data:application/json;base64,

angular.module("angular-translate-templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("translate-editor.tpl.html","<div><div class=\"form-group\" ng-class=\"{ \'has-error\': locale.hasError }\"><input type=\"text\" class=\"form-control\" ng-model=\"locale.search\" ng-change=\"locale.findByKey(locale.search)\" ng-model-options=\"{ debounce: 500 }\" placeholder=\"Enter xPath Query Here\"> <small ng-if=\"locale.hasError\" class=\"pull-right text-danger\">Invalid Query!</small></div><button class=\"btn btn-default btn-sm\" ng-repeat=\"query in locale.queries track by $index\" ng-click=\"locale.findByKey(query.search); locale.search = query.search;\">{{query.label}}</button><div ng-if=\"!locale.hasError && locale.search\" ng-repeat=\"language in locale.languages track by $index\"><br><div class=\"panel panel-default\"><div class=\"panel-heading\"><h3 class=\"panel-title\"><strong>{{language | uppercase}}</strong></h3></div><div class=\"panel-body\"><div class=\"form-group\" ng-repeat=\"form in locale.bindings[language].forms track by $index\"><div ng-if=\"form.hasInput\"><label>{{form.label}}:</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"form.value\" ng-change=\"locale.updateTranslations(form)\" ng-model-options=\"{ debounce: 500 }\"></div><div ng-if=\"!form.hasInput\"><div class=\"panel panel-default\"><div class=\"panel-heading\"><ng-form class=\"form-inline\"><div class=\"form-group\"><label>{{form.label}}.</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"locale.newKey\" placeholder=\"TRANSLATION_KEY\"></div><div class=\"form-group\"><label>&nbsp; Value</label><div class=\"input-group\"><input type=\"text\" class=\"form-control input-sm\" ng-model=\"form.newValue\" placeholder=\"Translated Value\"> <span class=\"input-group-btn\"><button type=\"submit\" class=\"btn btn-primary btn-sm\" ng-disabled=\"!form.newValue || !locale.newKey\" ng-click=\"locale.writeObjectByKey(locale.translations[language], form)\">Add</button></span></div></div></ng-form></div><div class=\"panel-body\"><div ng-if=\"form.isFlat\"><div class=\"form-group\" ng-repeat=\"(key, value) in form.value track by $index\"><label>{{form.label}}.{{key}}</label><div class=\"input-group\"><input type=\"text\" class=\"form-control input-sm\" ng-model=\"value\" ng-change=\"locale.updateObject(locale.translations[language], form, key, value)\" ng-model-options=\"{ debounce: 500 }\"> <span class=\"input-group-btn\"><button type=\"button\" tabindex=\"-1\" class=\"btn btn-warning btn-sm\" ng-click=\"locale.deleteObjectByKey(form, key)\">Remove</button></span></div></div></div><pre ng-if=\"!form.isFlat\">{{form.value | json}}</pre></div></div></div></div></div></div></div></div>");}]);