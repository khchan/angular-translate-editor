!function(){"use strict";function n(){return{restrict:"E",scope:{languages:"=",translations:"=",queries:"=",onUpdate:"=",onRemove:"="},replace:!0,templateUrl:"translate-editor.tpl.html",controller:"TranslateEditorController",controllerAs:"locale",bindToController:!0}}function e(n){function e(){_.each(g.languages,function(n){g.bindings[n]={forms:[]},g.xmlDefinitions[n]=JSON.toXML(g.translations[n])})}function t(){_.each(g.languages,function(n){g.xmlDefinitions[n]=JSON.toXML(g.translations[n])})}function a(){_.each(g.languages,function(n){g.bindings[n].forms=[]})}function o(n,e){var t=n;return _.each(e,function(n){t=t[n]}),t}function i(n,e){if(e=e||[],n.parentNode&&(e=i(n.parentNode,e)),n.previousSibling){var t=1,a=n.previousSibling;do 1==a.nodeType&&a.nodeName==n.nodeName&&t++,a=a.previousSibling;while(a);1==t&&(t=null)}else if(n.nextSibling){var o=n.nextSibling;do o=1==o.nodeType&&o.nodeName==n.nodeName?null:o.previousSibling;while(o)}return 1==n.nodeType&&e.push(n.nodeName),e}function l(n,e,t,a){var i=o(n,e.path);i[t]=a,e.value=i,i=null}function r(n,e){var a=o(n,e.path);a[g.newKey]=e.newValue,e.value=a,a=null,_.each(_.without(g.languages,e.lang),function(n){a=o(g.translations[n],e.path),_.has(a,g.newKey)||(a[g.newKey]=e.newValue,_.map(g.bindings[n].forms,function(n){n.value=a}))}),delete g.newKey,delete e.newValue,t()}function s(n,e){_.each(g.languages,function(t){var a=o(g.translations[t],n.path);delete a[e],_.map(g.bindings[t].forms,function(n){n.value=a})}),t()}function u(n){n.element.innerHTML=n.value;var e=Defiant.node.toJSON(g.xmlDefinitions[n.lang]);angular.copy(e,g.translations[n.lang])}function c(n){if(delete g.newKey,n)try{n=angular.uppercase(n),_.each(g.languages,function(e){g.bindings[e].forms=[];var t=Defiant.node.selectNodes(g.xmlDefinitions[e],n);_.each(t,function(n,t){var a=Defiant.node.toJSON(n),o=i(n).slice(1),l={lang:e,label:o.join("."),path:o,hasInput:"object"!=typeof n,isFlat:_.all(a,function(n,e){return _.isString(n)}),value:a,element:n};l.hasInput="object"!=typeof a,g.bindings[e].forms.push(l)}),g.hasError=!1})}catch(e){g.hasError=!0,a()}else g.hasError=!1,a()}function f(n,e){return e&&(e.preventDefault(),e.stopPropagation()),g.onUpdate(n)}function p(n,e){return e&&(e.preventDefault(),e.stopPropagation()),g.onRemove(n)}var g=this;g.languages=g.languages||[],g.translations=g.translations||{},g.queries=g.queries||[],g.onUpdate=g.onUpdate||angular.noop(),g.onRemove=g.onRemove||angular.noop(),g.bindings={},g.xmlDefinitions={},g.hasError=!1,g.updateObject=l,g.writeObjectByKey=r,g.deleteObjectByKey=s,g.updateTranslations=u,g.findByKey=c,g.callbackUpdate=f,g.callbackRemove=p,e(),n.$watch(function(){return g.languages},function(n,t){n!=t&&e()},!0)}angular.module("khchan.translate-editor",["ui.bootstrap","angular-translate-templates"]).directive("translateEditor",n).controller("TranslateEditorController",e),n.$inject=[],e.$inject=["$scope"]}();
//# sourceMappingURL=data:application/json;base64,

angular.module("angular-translate-templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("translate-editor.tpl.html","<div><div class=\"form-group\" ng-class=\"{ \'has-error\': locale.hasError }\"><input type=\"text\" class=\"form-control\" ng-model=\"locale.search\" ng-change=\"locale.findByKey(locale.search)\" ng-model-options=\"{ debounce: 500 }\" placeholder=\"Enter xPath Query Here\"> <small ng-if=\"locale.hasError\" class=\"pull-right text-danger\">Invalid Query!</small></div><button class=\"btn btn-default btn-sm\" ng-repeat=\"query in locale.queries track by $index\" ng-click=\"locale.findByKey(query.search); locale.search = query.search;\">{{query.label}}</button><hr><accordion ng-if=\"!locale.hasError\" close-others=\"false\"><accordion-group ng-repeat=\"language in locale.languages track by $index\" is-open=\"locale.tabs[language].$isOpen\"><accordion-heading>{{language | uppercase}} Dictionary <i class=\"glyphicon\" ng-class=\"{\'glyphicon-chevron-down\': locale.tabs[language].$isOpen, \'glyphicon-chevron-right\': !locale.tabs[language].$isOpen}\"></i><div class=\"pull-right\"><button type=\"button\" tabindex=\"-1\" class=\"btn btn-info btn-xs\" ng-click=\"locale.callbackUpdate(language, $event)\">Update</button> <button type=\"button\" tabindex=\"-1\" class=\"btn btn-danger btn-xs\" ng-click=\"locale.callbackRemove(language, $event)\">Remove</button></div></accordion-heading><div class=\"form-group\" ng-repeat=\"form in locale.bindings[language].forms track by $index\"><div ng-if=\"form.hasInput\"><label>{{form.label}}:</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"form.value\" ng-change=\"locale.updateTranslations(form)\" ng-model-options=\"{ debounce: 500 }\"></div><div ng-if=\"!form.hasInput\"><div class=\"panel panel-default\"><div class=\"panel-body\"><div ng-if=\"form.isFlat\"><div class=\"form-group\" ng-repeat=\"(key, value) in form.value track by $index\"><label>{{form.label}}.{{key}}</label><div class=\"input-group\"><input type=\"text\" class=\"form-control input-sm\" ng-model=\"value\" ng-change=\"locale.updateObject(locale.translations[language], form, key, value)\" ng-model-options=\"{ debounce: 500 }\"> <span class=\"input-group-btn\"><button type=\"button\" tabindex=\"-1\" class=\"btn btn-warning btn-sm\" ng-click=\"locale.deleteObjectByKey(form, key)\">Delete</button></span></div></div></div><pre ng-if=\"!form.isFlat\">{{form.value | json}}</pre></div><div class=\"panel-footer\"><div class=\"row\"><div class=\"col-md-4\"><label>{{form.label}}.{{locale.newKey}}</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"locale.newKey\" placeholder=\"TRANSLATION_KEY\"></div><div class=\"col-md-8\"><label>Translated Value</label><div class=\"input-group\"><input type=\"text\" class=\"form-control input-sm\" ng-model=\"form.newValue\" placeholder=\"Translated Value\"> <span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-primary btn-sm\" ng-disabled=\"!form.newValue || !locale.newKey\" ng-click=\"locale.writeObjectByKey(locale.translations[language], form)\">Insert</button></span></div></div></div></div></div></div></div><div ng-if=\"locale.search\" class=\"checkbox\"><label><input type=\"checkbox\" ng-model=\"locale.showAll[language]\"> Show Full Translation</label></div><pre ng-if=\"!locale.search\">{{locale.translations[language]| json}}</pre><div ng-repeat=\"form in locale.bindings[language].forms track by $index\"><pre ng-if=\"!locale.showAll[language]\">{{form.value | json}}</pre><pre ng-if=\"locale.showAll[language]\">{{locale.translations[language]| json}}</pre></div></accordion-group></accordion></div>");}]);