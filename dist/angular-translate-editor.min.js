!function(){"use strict";function n(){return{restrict:"E",scope:{basePath:"=",languages:"=",translations:"=",queries:"="},replace:!0,templateUrl:"translate-editor.tpl.html",controller:"TranslateEditorController",controllerAs:"locale",bindToController:!0}}function e(n){function e(){_.each(f.languages,function(n){f.bindings[n]={forms:[]},f.xmlDefinitions[n]=JSON.toXML(f.translations[n])})}function t(){_.each(f.languages,function(n){f.xmlDefinitions[n]=JSON.toXML(f.translations[n])})}function a(){_.each(f.languages,function(n){f.bindings[n].forms=[]})}function i(n,e){var t=n;return _.each(e,function(n){t=t[n]}),t}function o(n,e){if(e=e||[],n.parentNode&&(e=o(n.parentNode,e)),n.previousSibling){var t=1,a=n.previousSibling;do 1==a.nodeType&&a.nodeName==n.nodeName&&t++,a=a.previousSibling;while(a);1==t&&(t=null)}else if(n.nextSibling){var i=n.nextSibling;do i=1==i.nodeType&&i.nodeName==n.nodeName?null:i.previousSibling;while(i)}return 1==n.nodeType&&e.push(n.nodeName),e}function l(n,e,t,a){var o=i(n,e.path);o[t]=a,e.value=o,o=null}function r(n,e){var a=i(n,e.path);a[f.newKey]=e.newValue,e.value=a,a=null,_.each(_.without(f.languages,e.lang),function(n){a=i(f.translations[n],e.path),_.has(a,f.newKey)||(a[f.newKey]=e.newValue,_.map(f.bindings[n].forms,function(n){n.value=a}))}),delete f.newKey,delete e.newValue,t()}function s(n,e){_.each(f.languages,function(t){var a=i(f.translations[t],n.path);delete a[e],_.map(f.bindings[t].forms,function(n){n.value=a})}),t()}function u(n){n.element.innerHTML=n.value;var e=Defiant.node.toJSON(f.xmlDefinitions[n.lang]);angular.copy(e,f.translations[n.lang])}function c(n){if(delete f.newKey,n)try{n=angular.uppercase(n),_.each(f.languages,function(e){f.bindings[e].forms=[];var t=Defiant.node.selectNodes(f.xmlDefinitions[e],n);_.each(t,function(n,t){var a=Defiant.node.toJSON(n),i=o(n).slice(1),l={lang:e,label:i.join("."),path:i,hasInput:"object"!=typeof n,isFlat:_.all(a,function(n,e){return _.isString(n)}),value:a,element:n};l.hasInput="object"!=typeof a,f.bindings[e].forms.push(l)}),f.hasError=!1})}catch(e){f.hasError=!0,a()}else f.hasError=!1,a()}var f=this;f.languages=f.languages||[],f.translations=f.translations||{},f.queries=f.queries||[],f.bindings={},f.xmlDefinitions={},f.hasError=!1,f.updateObject=l,f.writeObjectByKey=r,f.deleteObjectByKey=s,f.updateTranslations=u,f.findByKey=c,e(),n.$watch(function(){return f.languages},function(n,t){console.log(n),console.log(t),n!=t&&e()},!0)}angular.module("khchan.translate-editor",["ui.bootstrap","angular-translate-templates"]).directive("translateEditor",n).controller("TranslateEditorController",e),n.$inject=[],e.$inject=["$scope"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuZ3VsYXItdHJhbnNsYXRlLWVkaXRvci5qcyJdLCJuYW1lcyI6WyJ0cmFuc2xhdGVFZGl0b3IiLCJyZXN0cmljdCIsInNjb3BlIiwiYmFzZVBhdGgiLCJsYW5ndWFnZXMiLCJ0cmFuc2xhdGlvbnMiLCJxdWVyaWVzIiwicmVwbGFjZSIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsImNvbnRyb2xsZXJBcyIsImJpbmRUb0NvbnRyb2xsZXIiLCJUcmFuc2xhdGVFZGl0b3JDb250cm9sbGVyIiwiJHNjb3BlIiwiaW5pdCIsIl8iLCJlYWNoIiwidm0iLCJsYW5nIiwiYmluZGluZ3MiLCJmb3JtcyIsInhtbERlZmluaXRpb25zIiwiSlNPTiIsInRvWE1MIiwic3luY0pzb25Ub1hNTCIsImNsZWFyQmluZGluZ3MiLCJ0cmF2ZXJzZU9iamVjdCIsIm9iamVjdCIsInBhdGgiLCJjdXJyIiwia2V5IiwiZ2V0UGF0aFRvTm9kZSIsIm5vZGUiLCJwYXJlbnROb2RlIiwicHJldmlvdXNTaWJsaW5nIiwiY291bnQiLCJzaWJsaW5nIiwibm9kZVR5cGUiLCJub2RlTmFtZSIsIm5leHRTaWJsaW5nIiwicHVzaCIsInVwZGF0ZU9iamVjdCIsImZvcm0iLCJ2YWx1ZSIsIndyaXRlT2JqZWN0QnlLZXkiLCJuZXdLZXkiLCJuZXdWYWx1ZSIsIndpdGhvdXQiLCJsYW5ndWFnZSIsImhhcyIsIm1hcCIsImRlbGV0ZU9iamVjdEJ5S2V5IiwidXBkYXRlVHJhbnNsYXRpb25zIiwiZWxlbWVudCIsImlubmVySFRNTCIsInVwZGF0ZWRKU09OIiwiRGVmaWFudCIsInRvSlNPTiIsImFuZ3VsYXIiLCJjb3B5IiwiZmluZEJ5S2V5IiwicXVlcnkiLCJ1cHBlcmNhc2UiLCJub2RlcyIsInNlbGVjdE5vZGVzIiwiaWR4Iiwibm9kZVZhbCIsInNsaWNlIiwibGFiZWwiLCJqb2luIiwiaGFzSW5wdXQiLCJpc0ZsYXQiLCJhbGwiLCJpc1N0cmluZyIsImhhc0Vycm9yIiwiZXJyIiwidGhpcyIsIiR3YXRjaCIsIm9yaWciLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZGlyZWN0aXZlIiwiJGluamVjdCJdLCJtYXBwaW5ncyI6IkNBQUEsV0FDQyxZQVNBLFNBQVNBLEtBQ1AsT0FDRUMsU0FBVSxJQUNWQyxPQUNFQyxTQUFVLElBQ1ZDLFVBQVcsSUFDWEMsYUFBYyxJQUNkQyxRQUFTLEtBRVhDLFNBQVMsRUFDVEMsWUFBYSw0QkFDYkMsV0FBWSw0QkFDWkMsYUFBYyxTQUNkQyxrQkFBa0IsR0FJdEIsUUFBU0MsR0FBMEJDLEdBNEJqQyxRQUFTQyxLQUNQQyxFQUFFQyxLQUFLQyxFQUFHYixVQUFXLFNBQVVjLEdBQzdCRCxFQUFHRSxTQUFTRCxJQUNWRSxVQUVGSCxFQUFHSSxlQUFlSCxHQUFRSSxLQUFLQyxNQUFNTixFQUFHWixhQUFhYSxNQUl6RCxRQUFTTSxLQUNQVCxFQUFFQyxLQUFLQyxFQUFHYixVQUFXLFNBQVVjLEdBQzdCRCxFQUFHSSxlQUFlSCxHQUFRSSxLQUFLQyxNQUFNTixFQUFHWixhQUFhYSxNQUl6RCxRQUFTTyxLQUNQVixFQUFFQyxLQUFLQyxFQUFHYixVQUFXLFNBQVVjLEdBQzdCRCxFQUFHRSxTQUFTRCxHQUFNRSxXQUl0QixRQUFTTSxHQUFlQyxFQUFRQyxHQUM5QixHQUFJQyxHQUFPRixDQUlYLE9BSEFaLEdBQUVDLEtBQUtZLEVBQU0sU0FBVUUsR0FDckJELEVBQU9BLEVBQUtDLEtBRVBELEVBR1QsUUFBU0UsR0FBY0MsRUFBTUosR0FNM0IsR0FMQUEsRUFBT0EsTUFDSEksRUFBS0MsYUFDUEwsRUFBT0csRUFBY0MsRUFBS0MsV0FBWUwsSUFHcENJLEVBQUtFLGdCQUFpQixDQUN4QixHQUFJQyxHQUFRLEVBQ1JDLEVBQVVKLEVBQUtFLGVBQ25CLEdBQzBCLElBQXBCRSxFQUFRQyxVQUFpQkQsRUFBUUUsVUFBWU4sRUFBS00sVUFBWUgsSUFDbEVDLEVBQVVBLEVBQVFGLHNCQUNaRSxFQUNLLElBQVRELElBQWNBLEVBQVEsVUFDckIsSUFBR0gsRUFBS08sWUFBYSxDQUMx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SixFQUFHeUQsVUFBVyxFQUdkekQsRUFBR3dCLGFBQWVBLEVBQ2xCeEIsRUFBRzJCLGlCQUFtQkEsRUFDdEIzQixFQUFHa0Msa0JBQW9CQSxFQUN2QmxDLEVBQUdtQyxtQkFBcUJBLEVBQ3hCbkMsRUFBRzJDLFVBQVlBLEVBRWY5QyxJQXdFQUQsRUFBT2dFLE9BQU8sV0FDYixNQUFPNUQsR0FBR2IsV0FDUixTQUFVeUIsRUFBTWlELEdBQ2xCQyxRQUFRQyxJQUFJbkQsR0FDWmtELFFBQVFDLElBQUlGLEdBQ1JqRCxHQUFRaUQsR0FDWGhFLE1BRUMsR0E3SEw0QyxRQUNHdUIsT0FBTywyQkFBNEIsZUFBZ0IsZ0NBQ25EQyxVQUFVLGtCQUFtQmxGLEdBQzdCUyxXQUFXLDRCQUE2QkcsR0FFM0NaLEVBQWdCbUYsV0FDaEJ2RSxFQUEwQnVFLFNBQVciLCJmaWxlIjoiYW5ndWxhci10cmFuc2xhdGUtZWRpdG9yLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCkge1xuXHQndXNlIHN0cmljdCc7XG5cdGFuZ3VsYXJcblx0ICAubW9kdWxlKCdraGNoYW4udHJhbnNsYXRlLWVkaXRvcicsIFsndWkuYm9vdHN0cmFwJywgJ2FuZ3VsYXItdHJhbnNsYXRlLXRlbXBsYXRlcyddKVxuXHQgIC5kaXJlY3RpdmUoJ3RyYW5zbGF0ZUVkaXRvcicsIHRyYW5zbGF0ZUVkaXRvcilcblx0ICAuY29udHJvbGxlcignVHJhbnNsYXRlRWRpdG9yQ29udHJvbGxlcicsIFRyYW5zbGF0ZUVkaXRvckNvbnRyb2xsZXIpO1xuXG5cdHRyYW5zbGF0ZUVkaXRvci4kaW5qZWN0ID0gW107XG5cdFRyYW5zbGF0ZUVkaXRvckNvbnRyb2xsZXIuJGluamVjdCA9IFsnJHNjb3BlJ107XG5cblx0ZnVuY3Rpb24gdHJhbnNsYXRlRWRpdG9yKCkge1xuXHQgIHJldHVybiB7XG5cdCAgICByZXN0cmljdDogJ0UnLFxuXHQgICAgc2NvcGU6IHtcblx0ICAgICAgYmFzZVBhdGg6ICc9JywgICAgICAgLy8geFBhdGggcXVlcnkgdG8gYXV0b21hdGljYWxseSBwcmVwZW5kIGFzIHJvb3Rcblx0ICAgICAgbGFuZ3VhZ2VzOiAnPScsICAgICAgLy8gYXJyYXkgb2YgYWxsb3dhYmxlIGxvY2FsZXNcblx0ICAgICAgdHJhbnNsYXRpb25zOiAnPScsICAgLy8gZGljdGlvbmFyeSBvZiBsYW5ndWFnZS10cmFuc2xhdGlvbnNcblx0ICAgICAgcXVlcmllczogJz0nICAgICAgICAgLy8gcHJlZGVmaW5lZCBxdWVyaWVzIHRvIGJ1aWxkIGJ1dHRvbnMgb25cblx0ICAgIH0sXG5cdCAgICByZXBsYWNlOiB0cnVlLFxuXHQgICAgdGVtcGxhdGVVcmw6ICd0cmFuc2xhdGUtZWRpdG9yLnRwbC5odG1sJyxcblx0ICAgIGNvbnRyb2xsZXI6ICdUcmFuc2xhdGVFZGl0b3JDb250cm9sbGVyJyxcblx0ICAgIGNvbnRyb2xsZXJBczogJ2xvY2FsZScsXG5cdCAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlXG5cdCAgfTtcblx0fVxuXG5cdGZ1bmN0aW9uIFRyYW5zbGF0ZUVkaXRvckNvbnRyb2xsZXIoJHNjb3BlKSB7XG5cdCAgdmFyIHZtID0gdGhpcztcblxuXHQgIC8vIGZyb20gZGlyZWN0aXZlXG5cdCAgdm0ubGFuZ3VhZ2VzID0gdm0ubGFuZ3VhZ2VzIHx8IFtdO1xuXHQgIHZtLnRyYW5zbGF0aW9ucyA9IHZtLnRyYW5zbGF0aW9ucyB8fCB7fTtcblx0ICB2bS5xdWVyaWVzID0gdm0ucXVlcmllcyB8fCBbXTtcblxuXHQgIC8vIGJpbmRhYmxlIHZhcmlhYmxlc1xuXHQgIHZtLmJpbmRpbmdzID0ge307ICAgICAgICAvLyBzdG9yZXMgcmVzdWx0cyBvZiB4UGF0aCBxdWVyeVxuXHQgIHZtLnhtbERlZmluaXRpb25zID0ge307ICAvLyB4bWwgZXF1aXZhbGVudHMgb2YgdHJhbnNsYXRpb24ganNvbnNcblx0ICB2bS5oYXNFcnJvciA9IGZhbHNlOyAgICAgLy8gYm9vbGVhbiBkZXRlcm1pbmluZyB3aGV0aGVyIHRoZXJlIHdhcyBhIHF1ZXJ5IGVycm9yXG5cblx0ICAvLyBiaW5kYWJsZSBtZXRob2RzXG5cdCAgdm0udXBkYXRlT2JqZWN0ID0gdXBkYXRlT2JqZWN0O1xuXHQgIHZtLndyaXRlT2JqZWN0QnlLZXkgPSB3cml0ZU9iamVjdEJ5S2V5O1xuXHQgIHZtLmRlbGV0ZU9iamVjdEJ5S2V5ID0gZGVsZXRlT2JqZWN0QnlLZXk7XG5cdCAgdm0udXBkYXRlVHJhbnNsYXRpb25zID0gdXBkYXRlVHJhbnNsYXRpb25zO1xuXHQgIHZtLmZpbmRCeUtleSA9IGZpbmRCeUtleTtcblxuXHQgIGluaXQoKTtcblxuXHQgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuXHQgIC8qKlxuXHQgICAqIFByaXZhdGUgTWV0aG9kc1xuXHQgICAqL1xuXG5cdCAgZnVuY3Rpb24gaW5pdCgpIHtcblx0ICAgIF8uZWFjaCh2bS5sYW5ndWFnZXMsIGZ1bmN0aW9uIChsYW5nKSB7XG5cdCAgICAgIHZtLmJpbmRpbmdzW2xhbmddID0ge1xuXHQgICAgICAgIGZvcm1zOiBbXVxuXHQgICAgICB9O1xuXHQgICAgICB2bS54bWxEZWZpbml0aW9uc1tsYW5nXSA9IEpTT04udG9YTUwodm0udHJhbnNsYXRpb25zW2xhbmddKTtcblx0ICAgIH0pO1xuXHQgIH1cblxuXHQgIGZ1bmN0aW9uIHN5bmNKc29uVG9YTUwoKSB7XG5cdCAgICBfLmVhY2godm0ubGFuZ3VhZ2VzLCBmdW5jdGlvbiAobGFuZykge1xuXHQgICAgICB2bS54bWxEZWZpbml0aW9uc1tsYW5nXSA9IEpTT04udG9YTUwodm0udHJhbnNsYXRpb25zW2xhbmddKTtcblx0ICAgIH0pO1xuXHQgIH1cblxuXHQgIGZ1bmN0aW9uIGNsZWFyQmluZGluZ3MoKSB7XG5cdCAgICBfLmVhY2godm0ubGFuZ3VhZ2VzLCBmdW5jdGlvbiAobGFuZykge1xuXHQgICAgICB2bS5iaW5kaW5nc1tsYW5nXS5mb3JtcyA9IFtdO1xuXHQgICAgfSk7XG5cdCAgfVxuXG5cdCAgZnVuY3Rpb24gdHJhdmVyc2VPYmplY3Qob2JqZWN0LCBwYXRoKSB7XG5cdCAgICB2YXIgY3VyciA9IG9iamVjdDtcblx0ICAgIF8uZWFjaChwYXRoLCBmdW5jdGlvbiAoa2V5KSB7XG5cdCAgICAgIGN1cnIgPSBjdXJyW2tleV07XG5cdCAgICB9KTtcblx0ICAgIHJldHVybiBjdXJyO1xuXHQgIH1cblxuXHQgIGZ1bmN0aW9uIGdldFBhdGhUb05vZGUobm9kZSwgcGF0aCkge1xuXHQgICAgcGF0aCA9IHBhdGggfHwgW107XG5cdCAgICBpZiAobm9kZS5wYXJlbnROb2RlKSB7XG5cdCAgICAgIHBhdGggPSBnZXRQYXRoVG9Ob2RlKG5vZGUucGFyZW50Tm9kZSwgcGF0aCk7XG5cdCAgICB9XG5cblx0ICAgIGlmIChub2RlLnByZXZpb3VzU2libGluZykge1xuXHQgICAgICB2YXIgY291bnQgPSAxO1xuXHQgICAgICB2YXIgc2libGluZyA9IG5vZGUucHJldmlvdXNTaWJsaW5nO1xuXHQgICAgICBkbyB7XG5cdCAgICAgICAgaWYgKHNpYmxpbmcubm9kZVR5cGUgPT0gMSAmJiBzaWJsaW5nLm5vZGVOYW1lID09IG5vZGUubm9kZU5hbWUpIHsgY291bnQrKzsgfVxuXHQgICAgICAgIHNpYmxpbmcgPSBzaWJsaW5nLnByZXZpb3VzU2libGluZztcblx0ICAgICAgfSB3aGlsZShzaWJsaW5nKTtcblx0ICAgICAgaWYgKGNvdW50ID09IDEpIHsgY291bnQgPSBudWxsOyB9XG5cdCAgICB9IGVsc2UgaWYobm9kZS5uZXh0U2libGluZykge1xuXHQgICAgICB2YXIgbmV4dFNpYmxpbmcgPSBub2RlLm5leHRTaWJsaW5nO1xuXHQgICAgICBkbyB7XG5cdCAgICAgICAgaWYgKG5leHRTaWJsaW5nLm5vZGVUeXBlID09IDEgJiYgbmV4dFNpYmxpbmcubm9kZU5hbWUgPT0gbm9kZS5ub2RlTmFtZSkge1xuXHQgICAgICAgICAgbmV4dFNpYmxpbmcgPSBudWxsO1xuXHQgICAgICAgIH0gZWxzZSB7XG5cdCAgICAgICAgICBuZXh0U2libGluZyA9IG5leHRTaWJsaW5nLnByZXZpb3VzU2libGluZztcblx0ICAgICAgICB9XG5cdCAgICAgIH0gd2hpbGUobmV4dFNpYmxpbmcpO1xuXHQgICAgfVxuXG5cdCAgICBpZiAobm9kZS5ub2RlVHlwZSA9PSAxKSB7XG5cdCAgICAgIHBhdGgucHVzaChub2RlLm5vZGVOYW1lKTtcblx0ICAgIH1cblx0ICAgIHJldHVybiBwYXRoO1xuXHQgIH1cblxuXHQgIC8qKlxuXHQgICAqIFB1YmxpYyBNZXRob2RzXG5cdCAgICovXG5cblx0ICAkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCkge1xuXHQgIFx0cmV0dXJuIHZtLmxhbmd1YWdlcztcblx0ICB9LCBmdW5jdGlvbiAoY3Vyciwgb3JpZykge1xuXHQgIFx0Y29uc29sZS5sb2coY3Vycik7XG5cdCAgXHRjb25zb2xlLmxvZyhvcmlnKTtcblx0ICBcdGlmIChjdXJyICE9IG9yaWcpIHtcblx0ICBcdFx0aW5pdCgpOyAvLyByZS1pbml0aWFsaXplIGJpbmRpbmdzIHdoZW4gbGFuZ3VhZ2VzIGFyZSBhZGRlZC9yZW1vdmVkXG5cdCAgXHR9XG5cdCAgfSwgdHJ1ZSk7XG5cblx0ICAvKipcblx0ICAgKiB1cGRhdGVPYmplY3Rcblx0ICAgKiBAZGVzY3JpcHRpb24gR2l2ZW4gYSBmbGF0IGpzb24gb2JqZWN0LCB1cGRhdGVzIGFuZCBzeW5jcyBhIHBhcnRpY3VsYXIga2V5L3ZhbHVlIHBhaXJcblx0ICAgKi9cblx0ICBmdW5jdGlvbiB1cGRhdGVPYmplY3Qob2JqZWN0LCBmb3JtLCBrZXksIHZhbHVlKSB7XG5cdCAgICB2YXIgY3VyciA9IHRyYXZlcnNlT2JqZWN0KG9iamVjdCwgZm9ybS5wYXRoKTtcblx0ICAgIGN1cnJba2V5XSA9IHZhbHVlO1xuXHQgICAgZm9ybS52YWx1ZSA9IGN1cnI7XG5cdCAgICBjdXJyID0gbnVsbDtcblx0ICB9XG5cblx0ICAvKipcblx0ICAgKiB3cml0ZU9iamVjdEJ5S2V5XG5cdCAgICogQGRlc2NyaXB0aW9uIFdyaXRlcyBhIG5ldyB2YWx1ZSB0byBhbiBvYmplY3QgYnkgdHJhdmVyc2luZyBkb3duIHRocm91Z2ggYSBwYXRoXG5cdCAgICogICAgICAgICAgICAgIHRoZW4gd3JpdGVzIGEgdmFsdWUgZ2l2ZW4gYSBrZXlcblx0ICAgKi9cblx0ICBmdW5jdGlvbiB3cml0ZU9iamVjdEJ5S2V5KG9iamVjdCwgZm9ybSkge1xuXHQgICAgLy8gdXBkYXRlIGZvciBmb3JtIGluIGN1cnJlbnQgbGFuZ3VhZ2Vcblx0ICAgIHZhciBjdXJyID0gdHJhdmVyc2VPYmplY3Qob2JqZWN0LCBmb3JtLnBhdGgpO1xuXHQgICAgLy8gc2V0IG5ldyBrZXkgdmFsdWVcblx0ICAgIGN1cnJbdm0ubmV3S2V5XSA9IGZvcm0ubmV3VmFsdWU7XG5cdCAgICAvLyB1cGRhdGUganNvbiBpbiBwcmV2aWV3XG5cdCAgICBmb3JtLnZhbHVlID0gY3Vycjtcblx0ICAgIGN1cnIgPSBudWxsO1xuXG5cdCAgICAvLyBjaGVjayBvdGhlciBsYW5ndWFnZXMgZm9yIGtleSBhbmQgZmlsbCB3aXRoIHZhbHVlIGlmIG5vdCBleGlzdHNcblx0ICAgIF8uZWFjaChfLndpdGhvdXQodm0ubGFuZ3VhZ2VzLCBmb3JtLmxhbmcpLCBmdW5jdGlvbiAobGFuZ3VhZ2UpIHtcblx0ICAgICAgY3VyciA9IHRyYXZlcnNlT2JqZWN0KHZtLnRyYW5zbGF0aW9uc1tsYW5ndWFnZV0sIGZvcm0ucGF0aCk7XG5cdCAgICAgIGlmICghXy5oYXMoY3Vyciwgdm0ubmV3S2V5KSkge1xuXHQgICAgICAgIGN1cnJbdm0ubmV3S2V5XSA9IGZvcm0ubmV3VmFsdWU7XG5cdCAgICAgICAgXy5tYXAodm0uYmluZGluZ3NbbGFuZ3VhZ2VdLmZvcm1zLCBmdW5jdGlvbiAoZm9ybSkge1xuXHQgICAgICAgICAgLy8gdXBkYXRlIGpzb24gaW4gcHJldmlld1xuXHQgICAgICAgICAgZm9ybS52YWx1ZSA9IGN1cnI7XG5cdCAgICAgICAgfSk7XG5cdCAgICAgIH1cblx0ICAgIH0pO1xuXG5cdCAgICAvLyBjbGVhciBpbnB1dHNcblx0ICAgIGRlbGV0ZSB2bS5uZXdLZXk7XG5cdCAgICBkZWxldGUgZm9ybS5uZXdWYWx1ZTtcblxuXHQgICAgLy8gc3luYyBjaGFuZ2VkIGpzb24gYmFjayB0byB4bWwgbW9kZWxcblx0ICAgIHN5bmNKc29uVG9YTUwoKTtcblx0ICB9XG5cblx0ICAvKipcblx0ICAgKiBkZWxldGVPYmplY3RCeUtleVxuXHQgICAqIEBkZXNjcmlwdGlvbiBEZWxldGVzIGEgdmFsdWUgZ2l2ZW4gYSBrZXkgaW4gYSBmbGF0IGpzb24gb2JqZWN0XG5cdCAgICovXG5cdCAgZnVuY3Rpb24gZGVsZXRlT2JqZWN0QnlLZXkoZm9ybSwga2V5KSB7XG5cdCAgICBfLmVhY2godm0ubGFuZ3VhZ2VzLCBmdW5jdGlvbiAobGFuZ3VhZ2UpIHtcblx0ICAgICAgdmFyIGN1cnIgPSB0cmF2ZXJzZU9iamVjdCh2bS50cmFuc2xhdGlvbnNbbGFuZ3VhZ2VdLCBmb3JtLnBhdGgpO1xuXHQgICAgICAvLyBzZXQgbmV3IGtleSB2YWx1ZVxuXHQgICAgICBkZWxldGUgY3VycltrZXldO1xuXHQgICAgICBfLm1hcCh2bS5iaW5kaW5nc1tsYW5ndWFnZV0uZm9ybXMsIGZ1bmN0aW9uIChmb3JtKSB7XG5cdCAgICAgICAgLy8gdXBkYXRlIGpzb24gaW4gcHJldmlld1xuXHQgICAgICAgIGZvcm0udmFsdWUgPSBjdXJyO1xuXHQgICAgICB9KTtcblx0ICAgIH0pO1xuXHQgICAgLy8gc3luYyBjaGFuZ2VkIGpzb24gYmFjayB0byB4bWwgbW9kZWxcblx0ICAgIHN5bmNKc29uVG9YTUwoKTtcblx0ICB9XG5cblx0ICBmdW5jdGlvbiB1cGRhdGVUcmFuc2xhdGlvbnMoZm9ybSkge1xuXHQgICAgZm9ybS5lbGVtZW50LmlubmVySFRNTCA9IGZvcm0udmFsdWU7XG5cdCAgICB2YXIgdXBkYXRlZEpTT04gPSBEZWZpYW50Lm5vZGUudG9KU09OKHZtLnhtbERlZmluaXRpb25zW2Zvcm0ubGFuZ10pO1xuXHQgICAgYW5ndWxhci5jb3B5KHVwZGF0ZWRKU09OLCB2bS50cmFuc2xhdGlvbnNbZm9ybS5sYW5nXSk7XG5cdCAgfVxuXG5cdCAgLyoqXG5cdCAgICogZmluZEJ5S2V5XG5cdCAgICogQGRlc2NyaXB0aW9uIE1haW4gcXVlcnkgZnVuY3Rpb24gZm9yIGV2YWx1YXRpbmcgeFBhdGggcXVlcmllcyBhZ2FpbnN0XG5cdCAgICogICAgICAgICAgICAgIEpTT04gdHJhbnNsYXRpb24gb2JqZWN0cy5cblx0ICAgKi9cblx0ICBmdW5jdGlvbiBmaW5kQnlLZXkocXVlcnkpIHtcblx0ICAgIGRlbGV0ZSB2bS5uZXdLZXk7XG5cdCAgICBpZiAoIXF1ZXJ5KSB7XG5cdCAgICAgIHZtLmhhc0Vycm9yID0gZmFsc2U7XG5cdCAgICAgIGNsZWFyQmluZGluZ3MoKTtcblx0ICAgIH0gZWxzZSB7XG5cdCAgICAgIHRyeSB7XG5cdCAgICAgICAgcXVlcnkgPSBhbmd1bGFyLnVwcGVyY2FzZShxdWVyeSk7XG5cdCAgICAgICAgXy5lYWNoKHZtLmxhbmd1YWdlcywgZnVuY3Rpb24gKGxhbmcpIHtcblx0ICAgICAgICAgIHZtLmJpbmRpbmdzW2xhbmddLmZvcm1zID0gW107XG5cdCAgICAgICAgICB2YXIgbm9kZXMgPSBEZWZpYW50Lm5vZGUuc2VsZWN0Tm9kZXModm0ueG1sRGVmaW5pdGlvbnNbbGFuZ10sIHF1ZXJ5KTtcblx0ICAgICAgICAgIF8uZWFjaChub2RlcywgZnVuY3Rpb24gKG5vZGUsIGlkeCkge1xuXHQgICAgICAgICAgICB2YXIgbm9kZVZhbCA9IERlZmlhbnQubm9kZS50b0pTT04obm9kZSk7XG5cdCAgICAgICAgICAgIHZhciBwYXRoID0gZ2V0UGF0aFRvTm9kZShub2RlKS5zbGljZSgxKTtcblx0ICAgICAgICAgICAgdmFyIGZvcm0gPSB7XG5cdCAgICAgICAgICAgICAgbGFuZzogbGFuZyxcblx0ICAgICAgICAgICAgICBsYWJlbDogcGF0aC5qb2luKFwiLlwiKSxcblx0ICAgICAgICAgICAgICBwYXRoOiBwYXRoLFxuXHQgICAgICAgICAgICAgIGhhc0lucHV0OiAodHlwZW9mIG5vZGUgIT09ICdvYmplY3QnKSxcblx0ICAgICAgICAgICAgICBpc0ZsYXQ6IF8uYWxsKG5vZGVWYWwsIGZ1bmN0aW9uICh2YWx1ZSwga2V5KSB7XG5cdCAgICAgICAgICAgICAgICByZXR1cm4gXy5pc1N0cmluZyh2YWx1ZSk7XG5cdCAgICAgICAgICAgICAgfSksXG5cdCAgICAgICAgICAgICAgdmFsdWU6IG5vZGVWYWwsXG5cdCAgICAgICAgICAgICAgZWxlbWVudDogbm9kZVxuXHQgICAgICAgICAgICB9O1xuXHQgICAgICAgICAgICAvLyBvbmx5IGFsbG93IG5vbiBhcnJheS9vYmplY3RzIHRvIGJlIGVkaXRhYmxlXG5cdCAgICAgICAgICAgIGZvcm0uaGFzSW5wdXQgPSAodHlwZW9mIG5vZGVWYWwgIT0gJ29iamVjdCcpO1xuXHQgICAgICAgICAgICB2bS5iaW5kaW5nc1tsYW5nXS5mb3Jtcy5wdXNoKGZvcm0pO1xuXHQgICAgICAgICAgfSk7XG5cdCAgICAgICAgICB2bS5oYXNFcnJvciA9IGZhbHNlO1xuXHQgICAgICAgIH0pO1xuXHQgICAgICB9IGNhdGNoKGVycikgeyAvLyBxdWVyeSBpbnZhbGlkLCBzbyBjbGVhciBiaW5kaW5nc1xuXHQgICAgICAgIHZtLmhhc0Vycm9yID0gdHJ1ZTtcblx0ICAgICAgICBjbGVhckJpbmRpbmdzKCk7XG5cdCAgICAgIH1cblx0ICAgIH1cblx0ICB9XG5cdH1cbn0pKCk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=

angular.module("angular-translate-templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("translate-editor.tpl.html","<div><div class=\"form-group\" ng-class=\"{ \'has-error\': locale.hasError }\"><input type=\"text\" class=\"form-control\" ng-model=\"locale.search\" ng-change=\"locale.findByKey(locale.search)\" ng-model-options=\"{ debounce: 500 }\" placeholder=\"Enter xPath Query Here\"> <small ng-if=\"locale.hasError\" class=\"pull-right text-danger\">Invalid Query!</small></div><button class=\"btn btn-default btn-sm\" ng-repeat=\"query in locale.queries track by $index\" ng-click=\"locale.findByKey(query.search); locale.search = query.search;\">{{query.label}}</button><hr><accordion ng-if=\"!locale.hasError\" close-others=\"false\"><accordion-group ng-repeat=\"language in locale.languages track by $index\" is-open=\"locale.tabs[language].$isOpen\"><accordion-heading>Edit {{language | uppercase}} Dictionary <i class=\"pull-right glyphicon\" ng-class=\"{\'glyphicon-chevron-down\': locale.tabs[language].$isOpen, \'glyphicon-chevron-right\': !locale.tabs[language].$isOpen}\"></i></accordion-heading><div class=\"form-group\" ng-repeat=\"form in locale.bindings[language].forms track by $index\"><div ng-if=\"form.hasInput\"><label>{{form.label}}:</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"form.value\" ng-change=\"locale.updateTranslations(form)\" ng-model-options=\"{ debounce: 500 }\"></div><div ng-if=\"!form.hasInput\"><div class=\"panel panel-default\"><div class=\"panel-body\"><div ng-if=\"form.isFlat\"><div class=\"form-group\" ng-repeat=\"(key, value) in form.value track by $index\"><label>{{form.label}}.{{key}}</label><div class=\"input-group\"><input type=\"text\" class=\"form-control input-sm\" ng-model=\"value\" ng-change=\"locale.updateObject(locale.translations[language], form, key, value)\" ng-model-options=\"{ debounce: 500 }\"> <span class=\"input-group-btn\"><button type=\"button\" tabindex=\"-1\" class=\"btn btn-warning btn-sm\" ng-click=\"locale.deleteObjectByKey(form, key)\">Delete</button></span></div></div></div><pre ng-if=\"!form.isFlat\">{{form.value | json}}</pre></div><div class=\"panel-footer\"><div class=\"row\"><div class=\"col-md-4\"><label>{{form.label}}.{{locale.newKey}}</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"locale.newKey\" placeholder=\"TRANSLATION_KEY\"></div><div class=\"col-md-8\"><label>Translated Value</label><div class=\"input-group\"><input type=\"text\" class=\"form-control input-sm\" ng-model=\"form.newValue\" placeholder=\"Translated Value\"> <span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-primary btn-sm\" ng-disabled=\"!form.newValue || !locale.newKey\" ng-click=\"locale.writeObjectByKey(locale.translations[language], form)\">Insert</button></span></div></div></div></div></div></div></div><div ng-if=\"locale.search\" class=\"checkbox\"><label><input type=\"checkbox\" ng-model=\"locale.showAll[language]\"> Show Full Translation</label></div><pre ng-if=\"!locale.search\">{{locale.translations[language]| json}}</pre><div ng-repeat=\"form in locale.bindings[language].forms track by $index\"><pre ng-if=\"!locale.showAll[language]\">{{form.value | json}}</pre><pre ng-if=\"locale.showAll[language]\">{{locale.translations[language]| json}}</pre></div></accordion-group></accordion></div>");}]);