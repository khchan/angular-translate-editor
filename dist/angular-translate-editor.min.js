!function(){"use strict";function n(){return{restrict:"E",scope:{languages:"=",translations:"=",queries:"=",onUpdate:"=",onRemove:"="},replace:!0,templateUrl:"translate-editor.tpl.html",controller:"TranslateEditorController",controllerAs:"locale",bindToController:!0}}function e(n){function e(){_.each(d.languages,function(n){d.insertNewObject[n]=!1,d.tabs[n]={$isOpen:!0},d.bindings[n]={forms:[]},d.xmlDefinitions[n]=JSON.toXML(d.translations[n])})}function t(){_.each(d.languages,function(n){d.xmlDefinitions[n]=JSON.toXML(d.translations[n])})}function a(){_.each(d.languages,function(n){d.bindings[n].forms=[]})}function i(n){return _.all(n,function(n,e){return _.isString(n)})}function o(n,e){var t=n;return _.each(e,function(n){t=t[n]}),t}function l(n,e){if(e=e||[],n.parentNode&&(e=l(n.parentNode,e)),n.previousSibling){var t=1,a=n.previousSibling;do 1==a.nodeType&&a.nodeName==n.nodeName&&t++,a=a.previousSibling;while(a);1==t&&(t=null)}else if(n.nextSibling){var i=n.nextSibling;do i=1==i.nodeType&&i.nodeName==n.nodeName?null:i.previousSibling;while(i)}return 1==n.nodeType&&e.push(n.nodeName),e}function r(n,e,t,a){var i=o(n,e.path);i[t]=a,e.value=i,i=null}function s(n,e){var a=o(n,e.path);a[d.newKey]=d.insertNewObject[e.lang]?{}:e.newValue,e.value=a,a=null,_.each(_.without(d.languages,e.lang),function(n){a=o(d.translations[n],e.path),_.has(a,d.newKey)||(a[d.newKey]=d.insertNewObject[e.lang]?{}:e.newValue,_.map(d.bindings[n].forms,function(n){n.value=a}))}),delete d.newKey,delete e.newValue,t()}function u(n,a){_.each(d.languages,function(e){var t;a?(t=o(d.translations[e],n.path),delete t[a]):(t=o(d.translations[e],n.path.slice(0,-1)),delete t[_.last(n.path)]),_.map(d.bindings[e].forms,function(e){e.label==n.label&&(e.value=t)})}),a||(delete d.search,e()),t()}function c(n){n.element.innerHTML=n.value;var e=Defiant.node.toJSON(d.xmlDefinitions[n.lang]);angular.copy(e,d.translations[n.lang])}function f(n){if(delete d.newKey,n)try{n=angular.uppercase(n),_.each(d.languages,function(e){d.bindings[e].forms=[];var t=Defiant.node.selectNodes(d.xmlDefinitions[e],n);_.each(t,function(n,t){var a=Defiant.node.toJSON(n),o=l(n).slice(1),r={lang:e,label:o.join("."),path:o,hasInput:"object"!=typeof n,isFlat:_.all(a,function(n,e){return i(n)}),value:a,element:n};r.hasInput="object"!=typeof a,d.bindings[e].forms.push(r)}),d.hasError=!1})}catch(e){d.hasError=!0,a()}else d.hasError=!1,a()}function p(n,e){return e&&(e.preventDefault(),e.stopPropagation()),d.onUpdate(n)}function g(n,e){return e&&(e.preventDefault(),e.stopPropagation()),d.onRemove(n)}var d=this;d.languages=d.languages||[],d.translations=d.translations||{},d.queries=d.queries||[],d.onUpdate=d.onUpdate||angular.noop(),d.onRemove=d.onRemove||angular.noop(),d.tabs={},d.insertNewObject={},d.bindings={},d.xmlDefinitions={},d.hasError=!1,d.isEmpty=_.isEmpty,d.isString=_.isString,d.updateObject=r,d.writeObjectByKey=s,d.deleteObjectByKey=u,d.updateTranslations=c,d.findByKey=f,d.callbackUpdate=p,d.callbackRemove=g,e(),n.$watch(function(){return d.languages},function(n,t){n!=t&&e()},!0)}angular.module("khchan.translate-editor",["ui.bootstrap","angular-translate-templates"]).directive("translateEditor",n).controller("TranslateEditorController",e),n.$inject=[],e.$inject=["$scope"]}();
//# sourceMappingURL=data:application/json;base64,

angular.module("angular-translate-templates", []).run(["$templateCache", function($templateCache) {$templateCache.put("translate-editor.tpl.html","<div><div class=\"form-group\" ng-class=\"{ \'has-error\': locale.hasError }\"><input type=\"text\" class=\"form-control\" ng-model=\"locale.search\" ng-change=\"locale.findByKey(locale.search)\" ng-model-options=\"{ debounce: 500 }\" placeholder=\"Enter xPath Query Here\"> <small ng-if=\"locale.hasError\" class=\"pull-right text-danger\">Invalid Query!</small></div><button class=\"btn btn-default btn-sm\" ng-repeat=\"query in locale.queries track by $index\" ng-click=\"locale.findByKey(query.search); locale.search = query.search;\">{{query.label}}</button><hr><accordion ng-if=\"!locale.hasError\" close-others=\"false\"><accordion-group ng-repeat=\"language in locale.languages track by $index\" is-open=\"locale.tabs[language].$isOpen\"><accordion-heading>{{language | uppercase}} Dictionary <i class=\"glyphicon\" ng-class=\"{\'glyphicon-chevron-down\': locale.tabs[language].$isOpen, \'glyphicon-chevron-right\': !locale.tabs[language].$isOpen}\"></i><div class=\"pull-right\"><button type=\"button\" tabindex=\"-1\" class=\"btn btn-info btn-xs\" ng-click=\"locale.callbackUpdate(language, $event)\">Update</button> <button type=\"button\" tabindex=\"-1\" class=\"btn btn-danger btn-xs\" ng-click=\"locale.callbackRemove(language, $event)\">Remove</button></div></accordion-heading><div class=\"form-group\" ng-repeat=\"form in locale.bindings[language].forms track by $index\"><div ng-if=\"form.hasInput\"><label>{{form.label}}:</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"form.value\" ng-change=\"locale.updateTranslations(form)\" ng-model-options=\"{ debounce: 500 }\"></div><div ng-if=\"!form.hasInput\"><div ng-if=\"locale.isEmpty(form.value)\"><button type=\"button\" tabindex=\"-1\" class=\"btn btn-warning btn-sm pull-right\" ng-click=\"locale.deleteObjectByKey(form)\">Remove Empty Object</button></div><div class=\"panel panel-default\"><div class=\"panel-body\"><div ng-if=\"form.isFlat\"><div class=\"form-group\" ng-repeat=\"(key, value) in form.value track by $index\"><label>{{form.label}}.{{key}}</label><div ng-if=\"locale.isString(value)\" class=\"input-group\"><input type=\"text\" class=\"form-control input-sm\" ng-model=\"value\" ng-change=\"locale.updateObject(locale.translations[language], form, key, value)\" ng-model-options=\"{ debounce: 500 }\"><pre ng-if=\"!locale.isString(value)\">{{value | json}}</pre><span class=\"input-group-btn\"><button type=\"button\" tabindex=\"-1\" class=\"btn btn-warning btn-sm\" ng-click=\"locale.deleteObjectByKey(form, key)\">Delete</button></span></div><div ng-if=\"!locale.isString(value)\"><pre>{{value | json}}</pre><button type=\"button\" tabindex=\"-1\" class=\"btn btn-warning btn-sm\" ng-click=\"locale.deleteObjectByKey(form, key)\">Delete</button></div></div></div><pre ng-if=\"!form.isFlat\">{{form.value | json}}</pre></div><div class=\"panel-footer\"><div class=\"row\"><div class=\"col-md-4\"><label>{{form.label}}.{{locale.newKey}}</label><input type=\"text\" class=\"form-control input-sm\" ng-model=\"locale.newKey\" placeholder=\"TRANSLATION_KEY\"></div><div class=\"col-md-8\"><label>Translated Value</label><div class=\"input-group\"><input type=\"text\" ng-if=\"!locale.insertNewObject[language]\" class=\"form-control input-sm\" ng-model=\"form.newValue\" placeholder=\"Translated Value\"> <span class=\"input-group-btn\"><button type=\"button\" class=\"btn btn-primary btn-sm\" ng-disabled=\"(locale.insertNewObject[language] && !locale.newKey) || (!locale.insertNewObject[language] && !form.newValue || !locale.newKey)\" ng-click=\"locale.writeObjectByKey(locale.translations[language], form)\">Insert</button></span></div></div></div><div class=\"row\"><div class=\"col-md-12\"><div class=\"checkbox\"><label><input type=\"checkbox\" ng-model=\"locale.insertNewObject[language]\"> Insert As New Object</label></div></div></div></div></div></div></div><div ng-if=\"locale.search\" class=\"checkbox\"><label><input type=\"checkbox\" ng-model=\"locale.showAll[language]\"> Show Full Translation</label></div><pre ng-if=\"!locale.search || locale.showAll[language]\">{{locale.translations[language] | json}}</pre></accordion-group></accordion></div>");}]);